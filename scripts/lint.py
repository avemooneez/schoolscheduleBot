#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –ª–∏–Ω—Ç–µ—Ä–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–æ–∫ –∫–æ–¥–∞.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: poetry run python scripts/lint.py [--fix]
"""

import argparse
import subprocess
import sys
from pathlib import Path


def run_command(cmd: list[str], description: str) -> bool:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ."""
    print(f"\nüîç {description}...")
    try:
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} - OK")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - FAILED")
        print(f"Error: {e.stderr}")
        return False


def main():
    parser = argparse.ArgumentParser(description="–ó–∞–ø—É—Å–∫ –ª–∏–Ω—Ç–µ—Ä–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–æ–∫ –∫–æ–¥–∞")
    parser.add_argument(
        "--fix", action="store_true", help="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –æ—à–∏–±–∫–∏"
    )
    parser.add_argument(
        "--ruff-only", action="store_true", help="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Ruff"
    )
    parser.add_argument(
        "--black-only", action="store_true", help="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Black"
    )
    parser.add_argument(
        "--mypy-only", action="store_true", help="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ mypy"
    )
    args = parser.parse_args()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–ª–∞–≥–æ–≤
    commands = []

    if args.ruff_only:
        commands = [
            (
                "ruff",
                ["ruff", "check", ".", "--fix"] if args.fix else ["ruff", "check", "."],
            )
        ]
    elif args.black_only:
        commands = [("black", ["black", "."])]
    elif args.mypy_only:
        commands = [("mypy", ["mypy", "."])]
    else:
        # –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        commands = [
            (
                "ruff check",
                ["ruff", "check", ".", "--fix"] if args.fix else ["ruff", "check", "."],
            ),
            (
                "ruff format",
                (
                    ["ruff", "format", "."]
                    if args.fix
                    else ["ruff", "format", "--check", "."]
                ),
            ),
            ("black", ["black", "."] if args.fix else ["black", "--check", "."]),
            ("isort", ["isort", "."] if args.fix else ["isort", "--check-only", "."]),
            ("mypy", ["mypy", "."]),
        ]

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    success = True
    for description, cmd in commands:
        if not run_command(cmd, description):
            success = False

    if success:
        print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\nüí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ—à–ª–∏. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        if not args.fix:
            print(
                "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å —Ñ–ª–∞–≥–æ–º --fix –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
            )
            print("   poetry run python scripts/lint.py --fix")
        sys.exit(1)


if __name__ == "__main__":
    main()
